// üåç Context Types ‚Äî the hardest thing to type cleanly.

// 1Ô∏è‚É£ Create a typed AuthContext with:
// interface AuthContextValue {
//   user: User | null
//   login: (token: string) => Promise<void>
//   logout: () => void
// }
// export const AuthContext = createContext<AuthContextValue | null>(null);

// 2Ô∏è‚É£ Create a hook `useAuth()` that throws an error if used outside the provider.
// - Ensure correct narrowing at type level (non-null).

// 3Ô∏è‚É£ Make a ‚ÄúDynamicContext‚Äù factory that can create new typed contexts on the fly.
// - Challenge: preserve generic type info through React.createContext + custom hook.

// ‚öîÔ∏è Reflection: Why does React Context typing often require *non-null assertions* or custom hooks?
